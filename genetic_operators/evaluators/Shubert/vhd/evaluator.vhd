-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc/Shubert/Approximation.vhd
-- Created: 2021-07-14 22:59:16
-- 
-- Generated by MATLAB 9.6 and HDL Coder 3.14
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Approximation
-- Source Path: Shubert/Approximation
-- Hierarchy Level: 0
-- 
-- Simulink subsystem description for Shubert/Approximation:
-- 
-- This block was created using function approximation.
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY evaluator IS
  PORT( In1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        In2                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        Out1                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix32_En20
        );
END evaluator;


ARCHITECTURE rtl OF evaluator IS

  -- Component Declarations
  COMPONENT Subsystem
    PORT( In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
          );
  END COMPONENT;

  COMPONENT Subsystem1
    PORT( In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Subsystem
    USE ENTITY work.Subsystem(rtl);

  FOR ALL : Subsystem1
    USE ENTITY work.Subsystem1(rtl);

  -- Signals
  SIGNAL Subsystem_out1                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Subsystem_out1_signed            : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Subsystem1_out1                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Subsystem1_out1_signed           : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Product_out1                     : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL sout                     : std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
BEGIN
  u_Subsystem : Subsystem
    PORT MAP( In1 => In1,  -- sfix16_En12
              Out1 => Subsystem_out1  -- sfix16_En10
              );

  u_Subsystem1 : Subsystem1
    PORT MAP( In1 => In2,  -- sfix16_En12
              Out1 => Subsystem1_out1  -- sfix16_En10
              );

  Subsystem_out1_signed <= signed(Subsystem_out1);

  Subsystem1_out1_signed <= signed(Subsystem1_out1);

  Product_out1 <= Subsystem_out1_signed * Subsystem1_out1_signed;

  sout <= std_logic_vector(Product_out1);

  out1 <= sout(15 downto 0);

END rtl;

